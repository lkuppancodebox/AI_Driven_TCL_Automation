# -*- coding: utf-8 -*-
"""ai_driven_automation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13YS7TqxLPSnPEeGb1jOVv5cdH5J9Xao-
"""

import pandas as pd
import json
import ast  # To safely evaluate dictionary strings
import sys
#from google.colab import drive
#drive.mount('/content/drive')
sys.path.append('/content/drive/MyDrive/Colab Notebooks/training_data_set')
from gen_prompt import test_block_template, test_script_template, tclLib2Json, generate_prompt

pip install google-generativeai

import google.generativeai as genai
#from google.colab import drive
#drive.mount('/content/drive')
import os

def Authenticate_model():
  # Set your Google Gemini API Key here
  with open('/content/drive/MyDrive/Colab Notebooks/training_data_set/api_key.txt', 'r') as file:
      API_KEY = file.read().strip()

  # Configure the API key
  genai.configure(api_key=API_KEY)

  # Initialize the model
  model = genai.GenerativeModel("gemini-2.0-flash")  # Using Gemini Pro model
  return model

def Genereate_exos_tcl_automation(model, prompt):
    try:
        response = model.generate_content(prompt)
        return response.text  # Extract text response
    except Exception as e:
        return f"Error: {str(e)}"

if __name__ == "__main__":

  # Read Test Plan from the text file (query)

  fid = open("/content/drive/MyDrive/Colab Notebooks/training_data_set/Automation_testplan.txt", "r")
  query = fid.read()
  fid.close()

  # Generate TCL Lib into JSON
  tcl_lib_json_dataset = tclLib2Json()

  # Generate prompt based on test plan and tcl lib
  prompt = generate_prompt(query, tcl_lib_json_dataset)

  # Initiate Model and generate tcl script
  model = Authenticate_model()
  response = Genereate_exos_tcl_automation(model, prompt)

  # Remove junk and filter script file name
  tcl_content=''
  for eachline in response.split("\n"):
    if "proc" in eachline:
      filename = eachline.split(" ")[1]
    if  "```" in eachline:
      continue
    else:
      tcl_content += eachline + "\n"
    tcl_filename = filename + ".tcl"

  # Write AI Response into the script file
  with open('/content/drive/MyDrive/Colab Notebooks/Output/'+tcl_filename, 'w') as file:
    file.write(tcl_content)

  # Display generated script file
  if os.path.exists('/content/drive/MyDrive/Colab Notebooks/Output/'+tcl_filename):
      print(f"File '/content/drive/MyDrive/Colab Notebooks/Output/{tcl_filename}' Generated Successlly !")



